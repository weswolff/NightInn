@model NightInnV2.Models.Drink

@{
    ViewBag.Title = "Edit";
}

<h2 class="page-header">Make changes to @Html.DisplayFor(model => model.DrinkName)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DrinkId)

        <div class="form-group">
            @Html.LabelFor(model => model.DrinkName, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.DrinkName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DrinkName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DrinkAbv, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.DrinkAbv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DrinkAbv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Ingredients, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instructions, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Instructions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Instructions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DrinkServingSize, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.DrinkServingSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DrinkServingSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-6 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info btn-large" })
            </div>
        </div>
    </div>
}
